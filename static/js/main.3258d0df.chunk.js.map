{"version":3,"sources":["components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss","components/Loader/Loader.module.css","components/Container/Container.module.scss","redux/actions.js","redux/action-operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Loader/Loader.js","components/ContatctList/ContactList.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","getContactRequest","createAction","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","deleteContactSuccess","deleteContactRequest","deleteContactError","filterContact","axios","defaults","baseURL","ContactForm","dispatch","useDispatch","items","useSelector","state","contacts","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","find","item","alert","a","contact","post","data","addContact","form__input","onChange","type","pattern","title","required","placeholder","btn","getLoading","loading","getVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","includes","LoaderComponent","loader","color","height","width","timeout","Contacts","visibleContacts","useEffect","get","filterList","map","id","filterListItem","text","span","onClick","delete","deleteContact","FilterContact","label","filterInput","target","Section","children","Container","container","App","ContactList","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3258d0df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__2W0lZ\",\"filterListItem\":\"ContactList_filterListItem__sC2He\",\"text\":\"ContactList_text__jjXKS\",\"span\":\"ContactList_span__aTr9k\",\"btn\":\"ContactList_btn__fOxpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"form__input\":\"ContactForm_form__input__3YBE6\",\"btn\":\"ContactForm_btn__1BmbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__37W93\",\"filterInput\":\"FilterContact_filterInput__M9FQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactRequest = createAction(\"contact/getContactRequest\");\nexport const getContactSuccess = createAction(\"contact/getContactSuccess\");\nexport const getContactError = createAction(\"contact/getContactError\");\n\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\nexport const addContactSuccess = createAction(\"contact/addContactSuccess\");\nexport const addContactError = createAction(\"contact/addContactError\");\n\nexport const deleteContactSuccess = createAction(\n  \"contact/deleteContactSuccess\"\n);\nexport const deleteContactRequest = createAction(\n  \"contact/deleteContactRequest\"\n);\nexport const deleteContactError = createAction(\"contact/deleteContactError\");\n\nexport const filterContact = createAction(\"contact/filter\");\n","import axios from \"axios\";\nimport {\n  getContactError,\n  getContactRequest,\n  getContactSuccess,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:2000\";\n\nexport const getContact = arg => async dispatch => {\n  dispatch(getContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(getContactSuccess(data));\n  } catch (error) {\n    dispatch(getContactError(error));\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  dispatch(addContactRequest());\n  const contact = {\n    name,\n    number,\n  };\n\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/action-operations\";\nimport s from \"./ContactForm.module.scss\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if (items.find(item => name === item.name)) {\n      alert(`${items.name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact(name, number));\n\n    reset();\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"+38 (099) 999-99-99\"\n        />\n      </label>\n      <button className={s.btn}>add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import Loader from \"react-loader-spinner\";\nimport s from \"./Loader.module.css\";\n\nexport default function LoaderComponent() {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Grid\"\n      color=\"black\"\n      height={80}\n      width={80}\n      timeout={4000}\n    />\n  );\n}\n","import s from \"./ContactList.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { deleteContact, getContact } from \"../../redux/action-operations\";\nimport { getLoading, getVisibleContacts } from \"../../redux/selectors\";\nimport Loader from \"../Loader\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const loading = useSelector(getLoading);\n  useEffect(() => dispatch(getContact()), [dispatch]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ul className={s.filterList}>\n          {visibleContacts.map(({ id, number, name }) => (\n            <li className={s.filterListItem} key={id}>\n              <p className={s.text}>\n                {name}: <span className={s.span}>{number}</span>\n              </p>\n\n              <button\n                className={s.btn}\n                onClick={() => dispatch(deleteContact(id))}\n                type=\"button\"\n              >\n                delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","import s from \"./FilterContact.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions\";\n\nconst FilterContact = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        onChange={e => dispatch(filterContact(e.target.value))}\n        value={value}\n      />\n    </label>\n  );\n};\n\nexport default FilterContact;\n","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import s from './Container.module.scss';\nimport React from 'react';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContatctList\";\nimport FilterContact from \"./components/FilterContact\";\nimport Section from \"./components/Section\";\nimport Container from \"./components/Container\";\nimport \"modern-normalize/modern-normalize.css\";\n\nexport default function App() {\n  return (\n    <Container className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport {\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [getContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./reducers\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={\"loading....\"} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}