{"version":3,"sources":["components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss","components/Loader/Loader.module.css","components/Container/Container.module.scss","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Loader/Loader.js","components/ContatctList/ContactList.js","redux/actions.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","then","data","addContact","contact","post","deleteContact","id","delete","ContactForm","dispatch","useDispatch","items","useSelector","state","contacts","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","find","item","alert","form__input","onChange","type","pattern","title","required","placeholder","btn","getLoading","loading","getVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","includes","LoaderComponent","loader","color","height","width","timeout","Contacts","visibleContacts","useEffect","filterList","map","filterListItem","text","span","onClick","filterContact","createAction","FilterContact","label","filterInput","target","Section","children","Container","container","App","ContactList","createReducer","fulfilled","payload","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbf5f3d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__2W0lZ\",\"filterListItem\":\"ContactList_filterListItem__sC2He\",\"text\":\"ContactList_text__jjXKS\",\"span\":\"ContactList_span__aTr9k\",\"btn\":\"ContactList_btn__fOxpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"form__input\":\"ContactForm_form__input__3YBE6\",\"btn\":\"ContactForm_btn__1BmbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__37W93\",\"filterInput\":\"FilterContact_filterInput__M9FQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://618d65e9fe09aa0017440724.mockapi.io';\n\nexport const fetchContact = createAsyncThunk(\n  'contacts/fetchContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await axios.get('/contacts').then(({ data }) => data);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      return await axios.post('/contacts', contact).then(({ data }) => data);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport s from './ContactForm.module.scss';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if (items.find(item => name === item.name)) {\n      alert(`${items.name} is already in contacts`);\n      reset();\n      return;\n    }\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"+38 (099) 999-99-99\"\n        />\n      </label>\n      <button className={s.btn}>add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import Loader from \"react-loader-spinner\";\nimport s from \"./Loader.module.css\";\n\nexport default function LoaderComponent() {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Grid\"\n      color=\"black\"\n      height={80}\n      width={80}\n      timeout={4000}\n    />\n  );\n}\n","import s from './ContactList.module.scss';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContact } from '../../redux/operations';\nimport { getLoading, getVisibleContacts } from '../../redux/selectors';\nimport Loader from '../Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const loading = useSelector(getLoading);\n  useEffect(() => dispatch(fetchContact()), [dispatch]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ul className={s.filterList}>\n          {visibleContacts.map(({ id, number, name }) => (\n            <li className={s.filterListItem} key={id}>\n              <p className={s.text}>\n                {name}: <span className={s.span}>{number}</span>\n              </p>\n\n              <button\n                className={s.btn}\n                onClick={() => dispatch(deleteContact(id))}\n                type=\"button\"\n              >\n                delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contact/filter');\n","import s from \"./FilterContact.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions\";\n\nconst FilterContact = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        onChange={e => dispatch(filterContact(e.target.value))}\n        value={value}\n      />\n    </label>\n  );\n};\n\nexport default FilterContact;\n","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import s from './Container.module.scss';\nimport React from 'react';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContatctList\";\nimport FilterContact from \"./components/FilterContact\";\nimport Section from \"./components/Section\";\nimport Container from \"./components/Container\";\nimport \"modern-normalize/modern-normalize.css\";\n\nexport default function App() {\n  return (\n    <Container className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { filterContact } from './actions';\nimport { fetchContact, addContact, deleteContact } from './operations';\n\nconst items = createReducer([], {\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./reducers\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={\"loading....\"} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}